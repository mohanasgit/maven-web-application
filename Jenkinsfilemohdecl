pipeline{
    agent any
    tools{
        maven 'maven 3.8.1'
    }
    triggers{
        //pollSCM('* * * * *')
        githubPush()
    }
    options{
        timestamps()
        buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '5', numToKeepStr: '5'))
    }
    stages {
        stage('CheckoutCode'){
            steps{
           git branch: 'development', credentialsId: '7cef8dd5-b079-4ba5-b1a3-b3578a3b01a8', url: 'https://github.com/mohanasgit/maven-web-application.git' 
        
            }
            }
        stage('Build'){
            steps{
            sh "mvn clean package"
            }
            }
        stage('ExecuteSonarQubeReport'){
            steps{
             sh "mvn clean sonar:sonar" 
            }
        }
        stage('UploadArtifactToNexus'){
            steps{
            sh "mvn clean deploy"
            }
        }
        stage('DeployApplicationIntoTomcat'){
            steps{
            sshagent(['1c134a3a-6a08-4ca8-9d50-3fbcada538de']) {
            sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@52.66.246.111:/opt/apache-tomcat-9.0.45/webapps/"
                }
            }
        }
    }
    post{
        success{
            emailext body: '''Build is succesful

            Regards
            MohanaDevops''', subject: 'Build Over', to: 'mohana.manchala@gmail.com,krishnasreethan@gmail.com'
            cleanWs()
        }
        failure{
          emailext body: '''Build is failed

            Regards
            MohanaDevops''', subject: 'Build Over', to: 'mohana.manchala@gmail.com,krishnasreethan@gmail.com'
            cleanWs()  
        }
        always{
            emailext body: '''Build status is as follows

            Regards
            MohanaDevops''', subject: 'Build Over', to: 'mohana.manchala@gmail.com,krishnasreethan@gmail.com'
            cleanWs()
        }
    }
}
